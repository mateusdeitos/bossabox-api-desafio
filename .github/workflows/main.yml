name: CI/CD AWS

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: CI Pipeline
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # This caches all of your node_modules folders throughout your repository,
      # and busts the cache every time a yarn.lock file changes.
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x

      # Instalar dependências
      - name: Install Dependencies
        run: yarn

      # Executar build
      - name: Run build
        run: yarn build

      # Executar build
      - name: Run tests
        run: yarn jest --coverage
        
      # Gera um pacote com os arquivos
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-release
          path: |
            ${{ github.workspace }}
            !${{ github.workspace }}/node_modules

  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Download do pacote
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-release
          
      - name: Display structure of downloaded files
        run: ls

      # Copiar todas as pastas para a AWS
      - name: Copy files to AWS Server, except node_modules
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: "."
          target: "~/app/pre-deploy/"
          rm: true 

      # Dependências, testes, migrations, reiniciar servidor
      - name: Dependencies, migrations, server restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
                  mv ~/app/bossabox-api-desafio/.env ~/app/
                  cd ~/app/bossabox-api-desafio/
                  rm -- !(.env)
                  mv ~/app/pre-deploy/* .
                  yarn
                  yarn build
                  yarn typeorm migration:run
                  pm2 restart bossabox-api-desafio

